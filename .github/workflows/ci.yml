name: CI/CD Pipeline

on:
  push:
    branches: [master]
    tags-ignore: ['**']
  pull_request:
    branches: [master]

env:
  CI: true

jobs:
  # Testing and Quality Assurance Jobs
  test:
    name: Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20, 22]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Lint code
        run: npm run lint
        
      - name: Type check
        run: npm run type-check
        
      - name: Build package
        run: npm run build
        
      - name: Run tests
        run: npm run test:run
        
      - name: Upload coverage to Codecov
        if: matrix.node-version == 20
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: false
          
  build-check:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build package
        run: npm run build
        
      - name: Check build output
        run: |
          ls -la dist/
          test -f dist/index.js
          test -f dist/index.d.ts
          
      - name: Test package exports
        run: |
          node -e "const pkg = require('./dist/index.js'); console.log('Exports:', Object.keys(pkg));"
          
  lint-and-format:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Check ESLint
        run: npm run lint
        
      - name: Check Prettier formatting
        run: npm run format:check
        
      - name: TypeScript type check
        run: npm run type-check

  # Release and Publishing Job
  release:
    name: Release & Publish
    runs-on: ubuntu-latest
    needs: [test, build-check, lint-and-format]
    
    permissions:
      contents: write
      id-token: write
      packages: write
    
    # Only run on push to master branch and not from release bot
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' && !contains(github.event.head_commit.message, 'chore(release)')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch full history for conventional commits
          fetch-depth: 0
          # Use a token that can trigger workflows
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run final tests
        run: npm run test:run
        
      - name: Build package
        run: npm run build
        
      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release