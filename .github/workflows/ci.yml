name: CI/CD Pipeline

on:
  push:
    branches: [master]
    tags-ignore: ['**']   # hindari trigger dari tag push
  pull_request:
    branches: [master]

env:
  CI: true

jobs:
  # ============================================================
  # TEST MATRIX
  # ============================================================
  test:
    name: Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 22]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Type check
        run: npm run type-check

      - name: Build
        run: npm run build

      - name: Tests
        run: npm run test:run

      # Opsional: upload coverage (hapus jika tak dipakai)
      # - name: Upload coverage to Codecov
      #   if: matrix.node-version == 20
      #   uses: codecov/codecov-action@v4
      #   with:
      #     files: ./coverage/lcov.info
      #     fail_ci_if_error: false

  # ============================================================
  # BUILD VERIFICATION
  # ============================================================
  build-check:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Build
        run: npm run build

      - name: Check build output
        run: |
          ls -la dist/
          test -f dist/index.js
          test -f dist/index.d.ts

      - name: Test package exports (ESM)
        run: |
          node -e "import('./dist/index.js').then(m=>console.log('Exports ESM OK')).catch(e=>{console.error(e);process.exit(1)})"

  # ============================================================
  # LINT / FORMAT
  # ============================================================
  lint-and-format:
    name: Code Quality Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: ESLint
        run: npm run lint

      - name: Prettier check
        run: npm run format:check

      - name: Type check
        run: npm run type-check

  # ============================================================
  # RELEASE (Mode B: commit balik CHANGELOG & package.json)
  # ============================================================
  release:
    name: Release & Publish
    runs-on: ubuntu-latest
    needs: [test, build-check, lint-and-format]

    # Hindari double-run & izinkan provenance
    permissions:
      contents: write
      id-token: write
      packages: write

    # Hanya jalan saat push ke master dan bukan commit release sebelumnya
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' && !contains(github.event.head_commit.message, 'chore(release)')

    concurrency:
      group: release-${{ github.ref }}
      cancel-in-progress: false

    steps:
      - name: Checkout (with PAT for push to protected branch)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_PAT }}   # Fine-grained PAT

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: Install deps
        run: npm ci

      - name: Configure git identity
        run: |
          git config user.name  "release-bot"
          git config user.email "release-bot@users.noreply.github.com"

      - name: Final tests
        run: npm run test:run

      - name: Build
        run: npm run build

      - name: NPM auth sanity (optional)
        run: npm whoami || true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Semantic Release
        env:
          # pakai PAT agar boleh commit & push ke branch yang diproteksi
          GITHUB_TOKEN: ${{ secrets.RELEASE_PAT }}
          # untuk publish ke npm (provenance aktif di publishConfig)
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
